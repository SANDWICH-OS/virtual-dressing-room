#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
"""

import subprocess
import sys
import os
from pathlib import Path
from loguru import logger

def run_command(command, description):
    """–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
    logger.info(f"üîÑ {description}...")
    try:
        result = subprocess.run(command, shell=True, check=True, capture_output=True, text=True)
        logger.info(f"‚úÖ {description} completed")
        return True
    except subprocess.CalledProcessError as e:
        logger.error(f"‚ùå {description} failed: {e}")
        logger.error(f"Error output: {e.stderr}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    logger.info("üöÄ Setting up local environment...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Python –≤–µ—Ä—Å–∏—é
    if sys.version_info < (3, 11):
        logger.error("‚ùå Python 3.11+ required. Current version: {sys.version}")
        return False
    
    logger.info(f"‚úÖ Python version: {sys.version}")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    if not run_command("pip install -r requirements.txt", "Installing Python dependencies"):
        return False
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º python-dotenv –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    if not run_command("pip install python-dotenv", "Installing python-dotenv"):
        return False
    
    # –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    env_file = Path(".env")
    if not env_file.exists():
        logger.info("üìù Creating .env file...")
        try:
            with open("env.local", "r") as src:
                content = src.read()
            with open(".env", "w") as dst:
                dst.write(content)
            logger.info("‚úÖ .env file created from env.local")
        except Exception as e:
            logger.error(f"‚ùå Error creating .env file: {e}")
            return False
    else:
        logger.info("‚úÖ .env file already exists")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    logger.info("üóÑÔ∏è Initializing database...")
    try:
        result = subprocess.run([sys.executable, "init_db.py"], check=True, capture_output=True, text=True)
        logger.info("‚úÖ Database initialized")
    except subprocess.CalledProcessError as e:
        logger.error(f"‚ùå Database initialization failed: {e}")
        logger.error(f"Error output: {e.stderr}")
        return False
    
    logger.info("üéâ Local environment setup completed!")
    logger.info("")
    logger.info("üìã Next steps:")
    logger.info("1. Get bot token from @BotFather")
    logger.info("2. Update BOT_TOKEN in .env file")
    logger.info("3. Run: python start_local.py")
    
    return True

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)

