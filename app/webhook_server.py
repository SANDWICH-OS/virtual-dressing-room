"""
FastAPI —Å–µ—Ä–≤–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook'–æ–≤ –æ—Ç Fashn AI
"""

import os
import sys
import asyncio
from pathlib import Path
from fastapi import FastAPI
from loguru import logger

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ PYTHONPATH
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
from dotenv import load_dotenv
load_dotenv()

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º webhook handlers
from app.bot.webhook_handlers import setup_webhook_routes

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Telegram –±–æ—Ç
from app.bot.bot import start_bot

# –°–æ–∑–¥–∞–µ–º FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = FastAPI(
    title="Virtual Try-On Bot Webhooks",
    description="Webhook server for Fashn AI integration",
    version="1.0.0"
)

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è webhook'–æ–≤
setup_webhook_routes(app)

@app.get("/")
async def root():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"""
    return {
        "message": "Virtual Try-On Bot Webhook Server",
        "status": "running",
        "version": "1.0.0"
    }

@app.get("/health")
async def health():
    """Health check endpoint"""
    return {
        "status": "healthy",
        "service": "webhook_server"
    }

async def startup():
    """–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ –≤ —Ñ–æ–Ω–µ"""
    try:
        logger.info("ü§ñ Starting Telegram bot in background...")
        await start_bot()
    except Exception as e:
        logger.error(f"‚ùå Error starting Telegram bot: {e}")

@app.on_event("startup")
async def startup_event():
    """–ó–∞–ø—É—Å–∫–∞–µ–º Telegram –±–æ—Ç –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ FastAPI"""
    asyncio.create_task(startup())

if __name__ == "__main__":
    import uvicorn
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    if os.getenv("RAILWAY_ENVIRONMENT") or os.getenv("RAILWAY_PROJECT_ID"):
        from app import config_prod
        settings = config_prod.settings
    else:
        from app.config import settings
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    # –í Railway –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Ä—Ç –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π 8080
    port = int(os.getenv("PORT", 8080))
    
    logger.info(f"üöÄ Starting webhook server on port {port}")
    
    uvicorn.run(
        "app.webhook_server:app",
        host="0.0.0.0",
        port=port,
        reload=settings.debug,
        log_level="info"
    )
