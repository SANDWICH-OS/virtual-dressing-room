from aiogram import Dispatcher
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from app.bot.states import UserStates
from app.bot.keyboards import MainKeyboard
from loguru import logger












async def handle_general_text_messages(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—â–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    from .commands import (
        profile_command, help_command, upload_user_photo_command, 
        upload_clothing_photo_command,
        test_vmodel_command, test_fashn_command, test_pixelcut_command,
        clear_command
    )
    
    user = message.from_user
    text = message.text
    current_state = await state.get_state()
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è "–ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω"
    if current_state == UserStates.unauthorized or current_state is None:
        await message.answer(
            "üëã <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Virtual Try-On Bot!</b>\n\n–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–∞–∂–º–∏ /start",
            reply_markup=None
        )
        return
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é (—Ç–æ–ª—å–∫–æ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ authorized)
    if current_state == UserStates.authorized:
        if text == "üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å":
            await profile_command(message, state)
        elif text == "üì∑ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è":
            await upload_user_photo_command(message, state)
        elif text == "üëó –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ –æ–¥–µ–∂–¥—ã":
            await upload_clothing_photo_command(message, state)
        elif text == "ü§ñ –¢–µ—Å—Ç VModel":
            await test_vmodel_command(message, state)
        elif text == "üëó –¢–µ—Å—Ç Fashn":
            await test_fashn_command(message, state)
        elif text == "‚úÇÔ∏è –¢–µ—Å—Ç Pixelcut":
            await test_pixelcut_command(message, state)
        elif text == "üí≥ –ü–æ–¥–ø–∏—Å–∫–∞":
            await message.answer(
                "üí≥ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π</b>\n\n–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö –±–æ—Ç–∞.",
                reply_markup=MainKeyboard.get_main_menu()
            )
        elif text == "üßπ –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ":
            await clear_command(message, state)
        elif text == "‚ùì –ü–æ–º–æ—â—å":
            await help_command(message, state)
        else:
            # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await message.answer(
                "‚ùì <b>–ù–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É</b>\n\n–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –∏–ª–∏ –∫–æ–º–∞–Ω–¥—ã:\n/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n/help - –ü–æ–º–æ—â—å\n/clear - –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ",
                reply_markup=MainKeyboard.get_main_menu()
            )
    elif current_state in [UserStates.waiting_user_photo, UserStates.waiting_clothing_photo, UserStates.subscription_management]:
        # –í —Å–æ—Å—Ç–æ—è–Ω–∏—è—Ö –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–æ–π - –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ authorized –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É
        await state.set_state(UserStates.authorized)
        
        if text == "üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å":
            await profile_command(message, state)
        elif text == "üì∑ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è":
            await upload_user_photo_command(message, state)
        elif text == "üëó –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ –æ–¥–µ–∂–¥—ã":
            await upload_clothing_photo_command(message, state)
        elif text == "ü§ñ –¢–µ—Å—Ç VModel":
            await test_vmodel_command(message, state)
        elif text == "üëó –¢–µ—Å—Ç Fashn":
            await test_fashn_command(message, state)
        elif text == "‚úÇÔ∏è –¢–µ—Å—Ç Pixelcut":
            await test_pixelcut_command(message, state)
        elif text == "üí≥ –ü–æ–¥–ø–∏—Å–∫–∞":
            await message.answer(
                "üí≥ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π</b>\n\n–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö –±–æ—Ç–∞.",
                reply_markup=MainKeyboard.get_main_menu()
            )
        elif text == "üßπ –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ":
            await clear_command(message, state)
        elif text == "‚ùì –ü–æ–º–æ—â—å":
            await help_command(message, state)
        else:
            # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await message.answer(
                "‚ùì <b>–ù–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É</b>\n\n–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –∏–ª–∏ –∫–æ–º–∞–Ω–¥—ã:\n/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n/help - –ü–æ–º–æ—â—å\n/clear - –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ",
                reply_markup=MainKeyboard.get_main_menu()
            )
    else:
        # –í –¥—Ä—É–≥–∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è—Ö - –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
        if text == "üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å":
            await profile_command(message, state)
        elif text == "üì∑ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è":
            await upload_user_photo_command(message, state)
        elif text == "üëó –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ –æ–¥–µ–∂–¥—ã":
            await upload_clothing_photo_command(message, state)
        elif text == "ü§ñ –¢–µ—Å—Ç VModel":
            await test_vmodel_command(message, state)
        elif text == "üëó –¢–µ—Å—Ç Fashn":
            await test_fashn_command(message, state)
        elif text == "‚úÇÔ∏è –¢–µ—Å—Ç Pixelcut":
            await test_pixelcut_command(message, state)
        elif text == "üí≥ –ü–æ–¥–ø–∏—Å–∫–∞":
            await message.answer(
                "üí≥ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π</b>\n\n–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö –±–æ—Ç–∞.",
                reply_markup=MainKeyboard.get_main_menu()
            )
        elif text == "üßπ –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ":
            await clear_command(message, state)
        elif text == "‚ùì –ü–æ–º–æ—â—å":
            await help_command(message, state)
        else:
            # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await message.answer(
                "‚ùì <b>–ù–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É</b>\n\n–ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –∏–ª–∏ –∫–æ–º–∞–Ω–¥—ã:\n/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n/help - –ü–æ–º–æ—â—å\n/clear - –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ",
                reply_markup=MainKeyboard.get_main_menu()
            )
    
    logger.info(f"User {user.id} sent text message: {text}")


def register_ai_testing_handlers(dp: Dispatcher):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ò–ò"""
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–∫—Ä–æ–º–µ –∫–æ–º–∞–Ω–¥ –∏ –æ—Ç–º–µ–Ω—ã)
    dp.message.register(
        handle_general_text_messages,
        lambda m: m.text is not None and m.text not in ["üîô –ù–∞–∑–∞–¥"]
    )