#!/usr/bin/env python3
"""
Railway production bot - –Ω–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å –§–∞–∑–æ–π 4.1
"""

import os
import sys
import asyncio
from pathlib import Path
from loguru import logger

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ PYTHONPATH
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
from dotenv import load_dotenv
load_dotenv()

# –ò—Å–ø–æ–ª—å–∑—É–µ–º production –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è Railway
import sys
sys.path.insert(0, str(project_root))
from app import config_prod

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è production
logger.remove()
logger.add(
    sys.stdout,
    format="<green>{time:YYYY-MM-DD HH:mm:ss}</green> | <level>{level: <8}</level> | <cyan>{name}</cyan>:<cyan>{function}</cyan>:<cyan>{line}</cyan> - <level>{message}</level>",
    level="INFO"
)

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    try:
        logger.info("üöÄ Starting Virtual Try-On Bot (Railway Production) - v2...")
        
        # –õ–æ–≥–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        logger.info(f"BOT_TOKEN: {'‚úÖ Set' if os.getenv('BOT_TOKEN') else '‚ùå Missing'}")
        logger.info(f"REDIS_URL: {os.getenv('REDIS_URL', 'Not set')}")
        logger.info(f"DATABASE_URL: {os.getenv('DATABASE_URL', 'Not set')}")
        logger.info(f"RAILWAY_ENVIRONMENT: {os.getenv('RAILWAY_ENVIRONMENT', 'Not set')}")
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
        from app.bot.bot import start_bot
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ (—Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤–Ω—É—Ç—Ä–∏ start_bot)
        await start_bot()
        
    except Exception as e:
        logger.error(f"‚ùå Error starting bot: {e}")
        raise

if __name__ == "__main__":
    asyncio.run(main())
